"use strict";(self.webpackChunk_viotemplate_docs=self.webpackChunk_viotemplate_docs||[]).push([[785],{3905:function(e,t,l){l.d(t,{Zo:function(){return c},kt:function(){return h}});var i=l(7294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function s(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,i)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?s(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):s(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,i,n=function(e,t){if(null==e)return{};var l,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)l=s[i],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)l=s[i],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var a=i.createContext({}),p=function(e){var t=i.useContext(a),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},c=function(e){var t=p(e.components);return i.createElement(a.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var l=e.components,n=e.mdxType,s=e.originalType,a=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(l),h=n,y=u["".concat(a,".").concat(h)]||u[h]||d[h]||s;return l?i.createElement(y,r(r({ref:t},c),{},{components:l})):i.createElement(y,r({ref:t},c))}));function h(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=l.length,r=new Array(s);r[0]=u;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var p=2;p<s;p++)r[p]=l[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,l)}u.displayName="MDXCreateElement"},4797:function(e,t,l){l.r(t),l.d(t,{contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return h}});var i=l(7462),n=l(3366),s=l(7294),r=l(3905),o=l(2825),a=function(e){var t=function(e){return Object.entries(e).map((function(e){return{name:e[0],version:e[1]}}))}("production"===e.type?o.dependencies:o.devDependencies);return s.createElement("table",null,s.createElement("thead",null,s.createElement("tr",null,s.createElement("th",null,"Tool"),s.createElement("th",null,"Version"))),s.createElement("tbody",null,t.map((function(e){return s.createElement("tr",null,s.createElement("td",null,e.name),s.createElement("td",null,e.version))}))))},p=["components"],c={sidebar_position:1},d="Tools",u={unversionedId:"Packages/server/tools",id:"Packages/server/tools",title:"Tools",description:"Here's a summary of the tools used in this project and their versions.",source:"@site/docs/Packages/server/tools.mdx",sourceDirName:"Packages/server",slug:"/Packages/server/tools",permalink:"/docs/Packages/server/tools",editUrl:"https://github.com/otaviotech/ts-monorepo/tree/main/packages/docs/docs/Packages/server/tools.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quick start",permalink:"/docs/Contributing/Tutorial"},next:{title:"Architecture",permalink:"/docs/Packages/server/architecture"}},h=[{value:"Runtime tools",id:"runtime-tools",children:[{value:"@prisma/client",id:"prismaclient",children:[],level:3},{value:"bcrypt",id:"bcrypt",children:[],level:3},{value:"body-parser",id:"body-parser",children:[],level:3},{value:"dotenv",id:"dotenv",children:[],level:3},{value:"express",id:"express",children:[],level:3},{value:"helmet",id:"helmet",children:[],level:3},{value:"http-status-codes",id:"http-status-codes",children:[],level:3},{value:"inversify",id:"inversify",children:[],level:3},{value:"reflect-metadata",id:"reflect-metadata",children:[],level:3},{value:"tsconfig-paths",id:"tsconfig-paths",children:[],level:3},{value:"yup",id:"yup",children:[],level:3}],level:2},{value:"Development tools",id:"development-tools",children:[{value:"@redocly/openapi-cli",id:"redoclyopenapi-cli",children:[],level:3},{value:"@types/bcrypt",id:"typesbcrypt",children:[],level:3},{value:"@types/express",id:"typesexpress",children:[],level:3},{value:"@types/jest",id:"typesjest",children:[],level:3},{value:"@types/node",id:"typesnode",children:[],level:3},{value:"@types/shelljs",id:"typesshelljs",children:[],level:3},{value:"@types/supertest",id:"typessupertest",children:[],level:3},{value:"@typescript-eslint/eslint-plugin",id:"typescript-eslinteslint-plugin",children:[],level:3},{value:"@typescript-eslint/parser",id:"typescript-eslintparser",children:[],level:3},{value:"eslint",id:"eslint",children:[],level:3},{value:"eslint-config-airbnb-base",id:"eslint-config-airbnb-base",children:[],level:3},{value:"eslint-config-airbnb-typescript",id:"eslint-config-airbnb-typescript",children:[],level:3},{value:"eslint-config-prettier",id:"eslint-config-prettier",children:[],level:3},{value:"eslint-config-plugin-import",id:"eslint-config-plugin-import",children:[],level:3},{value:"factory.ts",id:"factoryts",children:[],level:3},{value:"faker",id:"faker",children:[],level:3},{value:"jest",id:"jest",children:[],level:3},{value:"jest-mock-extended",id:"jest-mock-extended",children:[],level:3},{value:"prettier",id:"prettier",children:[],level:3},{value:"prisma",id:"prisma",children:[],level:3},{value:"redoc-cli",id:"redoc-cli",children:[],level:3},{value:"shelljs",id:"shelljs",children:[],level:3},{value:"supertest",id:"supertest",children:[],level:3},{value:"ts-jest",id:"ts-jest",children:[],level:3},{value:"typescript",id:"typescript",children:[],level:3}],level:2}],y={toc:h};function f(e){var t=e.components,l=(0,n.Z)(e,p);return(0,r.kt)("wrapper",(0,i.Z)({},y,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tools"},"Tools"),(0,r.kt)("p",null," Here's a summary of the tools used in this project and their versions."),(0,r.kt)("p",null,"A deep dive of each dependency is available at 'LINK'."),(0,r.kt)("h2",{id:"runtime-tools"},"Runtime tools"),(0,r.kt)(a,{type:"production",mdxType:"ToolsTable"}),(0,r.kt)("h3",{id:"prismaclient"},"@prisma/client"),(0,r.kt)("p",null,"This is the Prisma client. It's used to actually perform the connection and queries to the database."),(0,r.kt)("h3",{id:"bcrypt"},"bcrypt"),(0,r.kt)("p",null,"This is a popular cryptography tool."),(0,r.kt)("p",null,"Currently we only use it to hash the user's password with a salt before storing them in the database."),(0,r.kt)("h3",{id:"body-parser"},"body-parser"),(0,r.kt)("p",null,"This is a ",(0,r.kt)("code",null,"Express")," middleware used to parse the http requests bodies from text to JSON."),(0,r.kt)("h3",{id:"dotenv"},"dotenv"),(0,r.kt)("p",null,"This is a library used to populate ",(0,r.kt)("code",null,"proccess.env.*")," using a template file. E.g.: ",(0,r.kt)("code",null,".env")),(0,r.kt)("h3",{id:"express"},"express"),(0,r.kt)("p",null,"This is a popular and battle tested web framework."),(0,r.kt)("p",null,"We currently use it for handling low level http (requests, responses, headers, etc)."),(0,r.kt)("h3",{id:"helmet"},"helmet"),(0,r.kt)("p",null,"This is collection of ",(0,r.kt)("code",null,"Express")," middlewares that ensures the bare minimum security gotchas when it comes to web servers."),(0,r.kt)("p",null,"E.g.: It removes the ",(0,r.kt)("code",null,"X-Powered-By")," header from the http responses, so we don't spoil what web framework we are using, preventing attackers to apply tool specific sploits."),(0,r.kt)("h3",{id:"http-status-codes"},"http-status-codes"),(0,r.kt)("p",null,"This is a simply tool to help readability of the HTTP status codes."),(0,r.kt)("p",null,"It provides all HTTP status through constants and also some util helpers."),(0,r.kt)("p",null,"E.g.: ",(0,r.kt)("code",null,"HttpStatusCode.BAD_REQUEST")),(0,r.kt)("h3",{id:"inversify"},"inversify"),(0,r.kt)("p",null,"This is our ",(0,r.kt)("i",null,"IoC container"),"."),(0,r.kt)("p",null,"Currently, we use it in our ",(0,r.kt)("i",null,"Composition Root")," in the main layer, to handle creation of instances and their scopes."),(0,r.kt)("h3",{id:"reflect-metadata"},"reflect-metadata"),(0,r.kt)("p",null,"This is a peer dependency of ",(0,r.kt)("code",null,"inversify")," and it's necessary to perform runtime reflection on types."),(0,r.kt)("h3",{id:"tsconfig-paths"},"tsconfig-paths"),(0,r.kt)("p",null,"This library allow us use to use TypeScript path aliases in production, so our transpiled JavaScript files know how to resolve the path aliased modules at runtime."),(0,r.kt)("p",null,"E.g.: ",(0,r.kt)("code",null,"import SignUpUseCase from '@data/usecases';")),(0,r.kt)("h3",{id:"yup"},"yup"),(0,r.kt)("p",null,"This is validation library based in schemas."),(0,r.kt)("p",null,"It's very useful at our ",(0,r.kt)("i",null,"Presentation Layer")," where we do the schema validation of the inputs."),(0,r.kt)("p",null,"Remember, it's only ",(0,r.kt)("b",null,"Schema")," validation, not ",(0,r.kt)("b",null,"Domain")," validation."),(0,r.kt)("p",null,"Domain validation like verify uniqueness of an email is done at the"," ",(0,r.kt)("code",null,"Data Layer")),(0,r.kt)("h2",{id:"development-tools"},"Development tools"),(0,r.kt)(a,{type:"dev",mdxType:"ToolsTable"}),(0,r.kt)("h3",{id:"redoclyopenapi-cli"},"@redocly/openapi-cli"),(0,r.kt)("p",null,"This is used to lint our OpenAPI specs."),(0,r.kt)("h3",{id:"typesbcrypt"},"@types/bcrypt"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"bcrypt")),(0,r.kt)("h3",{id:"typesexpress"},"@types/express"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"express")),(0,r.kt)("h3",{id:"typesjest"},"@types/jest"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"jest")),(0,r.kt)("h3",{id:"typesnode"},"@types/node"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"node")),(0,r.kt)("h3",{id:"typesshelljs"},"@types/shelljs"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"shelljs")),(0,r.kt)("h3",{id:"typessupertest"},"@types/supertest"),(0,r.kt)("p",null,"Type definitions for ",(0,r.kt)("code",null,"supertest")),(0,r.kt)("h3",{id:"typescript-eslinteslint-plugin"},"@typescript-eslint/eslint-plugin"),(0,r.kt)("p",null,"An ESLinst plugin to lint TypeScript syntax."),(0,r.kt)("h3",{id:"typescript-eslintparser"},"@typescript-eslint/parser"),(0,r.kt)("p",null,"The parser for ",(0,r.kt)("code",null,"@typescript-eslint/eslint-plugin"),"."),(0,r.kt)("h3",{id:"eslint"},"eslint"),(0,r.kt)("p",null,"A linter enfoce a code style."),(0,r.kt)("h3",{id:"eslint-config-airbnb-base"},"eslint-config-airbnb-base"),(0,r.kt)("p",null,"A config to make ESLint respect the AirBnB styleguide."),(0,r.kt)("h3",{id:"eslint-config-airbnb-typescript"},"eslint-config-airbnb-typescript"),(0,r.kt)("p",null,"A config that makes ",(0,r.kt)("code",null,"esling-config-airbnb-base")," work well with TypeScript."),(0,r.kt)("h3",{id:"eslint-config-prettier"},"eslint-config-prettier"),(0,r.kt)("p",null,"An ESLint config that disables some rules so ESLint and Prettier can work togheter."),(0,r.kt)("h3",{id:"eslint-config-plugin-import"},"eslint-config-plugin-import"),(0,r.kt)("p",null,"This is a peer dependency of ",(0,r.kt)("code",null,"eslint-config-airbnb-typescript")),(0,r.kt)("h3",{id:"factoryts"},"factory.ts"),(0,r.kt)("p",null,"This is a useful tool that generates a factory from an interface."),(0,r.kt)("p",null,"It works well with ",(0,r.kt)("code",null,"faker")," to generate test data."),(0,r.kt)("h3",{id:"faker"},"faker"),(0,r.kt)("p",null,"A library to generate fake data. E.g.: names, emails, adresses, etc."),(0,r.kt)("h3",{id:"jest"},"jest"),(0,r.kt)("p",null,"A test framework with everything included out of the box: test runner, assertion API, mocking API, stubing API, etc."),(0,r.kt)("h3",{id:"jest-mock-extended"},"jest-mock-extended"),(0,r.kt)("p",null,"A library that enhances ",(0,r.kt)("code",null,"Jest"),"'s mocking API."),(0,r.kt)("p",null,"It can for example generate a deep mock, without having to create deep nested dummy objects and functions"),(0,r.kt)("h3",{id:"prettier"},"prettier"),(0,r.kt)("p",null,"A library to format the codebase."),(0,r.kt)("h3",{id:"prisma"},"prisma"),(0,r.kt)("p",null,"Prisma is currently the ORM to access relational databases."),(0,r.kt)("h3",{id:"redoc-cli"},"redoc-cli"),(0,r.kt)("p",null,"This is used to generate REST API documentation (redoc) from our OpenAPI specs."),(0,r.kt)("h3",{id:"shelljs"},"shelljs"),(0,r.kt)("p",null,"A tool useful to run cross-platform OS commands. Especially useful for building build scripts."),(0,r.kt)("h3",{id:"supertest"},"supertest"),(0,r.kt)("p",null,"A library to perform integration tests without having to hit IO."),(0,r.kt)("p",null,"TL;DR: without having to spin up a web server to test its routes."),(0,r.kt)("h3",{id:"ts-jest"},"ts-jest"),(0,r.kt)("p",null,"A Jest transformer to execute tests using TypeScript."),(0,r.kt)("h3",{id:"typescript"},"typescript"),(0,r.kt)("p",null,"The typescript transpiler."))}f.isMDXComponent=!0},2825:function(e){e.exports=JSON.parse('{"name":"@viotemplate/server","version":"1.0.0","description":"","main":"build/index.js","scripts":{"build:ts":"tsc -p tsconfig.build.json","build:docs":"redoc-cli bundle openapi.yaml --cdn -o build/public/spec.html","build":"node scripts/build.js","format":"prettier --write . --loglevel=warn && npx prisma format","lint:ts":"eslint . --ext .ts --fix --no-error-on-unmatched-pattern","lint:docs":"openapi lint openapi.yaml","lint":"npm run lint:ts && npm run lint:docs","start":"TS_NODE_BASEURL=./build node -r tsconfig-paths/register ./build/src/main/server/index.js","test":"jest --passWithNoTests","test:ci":"jest --coverage"},"keywords":[],"author":"","license":"ISC","devDependencies":{"@redocly/openapi-cli":"^1.0.0-beta.76","@types/bcrypt":"^5.0.0","@types/express":"^4.17.13","@types/jest":"^27.0.3","@types/node":"^17.0.5","@types/shelljs":"^0.8.10","@types/supertest":"^2.0.11","@typescript-eslint/eslint-plugin":"^5.8.1","@typescript-eslint/parser":"^5.8.1","eslint":"^8.5.0","eslint-config-airbnb-base":"^15.0.0","eslint-config-airbnb-typescript":"^16.1.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.3","factory.ts":"^0.5.2","faker":"^5.5.3","jest":"^27.4.5","jest-mock-extended":"^2.0.4","prettier":"2.5.1","prisma":"^3.7.0","redoc-cli":"^0.13.2","shelljs":"^0.8.4","supertest":"^6.1.6","ts-jest":"^27.1.2","typescript":"^4.5.4"},"dependencies":{"@prisma/client":"^3.7.0","bcrypt":"^5.0.1","body-parser":"^1.19.1","dotenv":"^10.0.0","express":"^4.17.2","helmet":"^5.0.0","http-status-codes":"^2.2.0","inversify":"^6.0.1","reflect-metadata":"^0.1.13","tsconfig-paths":"^3.12.0","yup":"^0.32.11"},"prisma":{"schema":"src/infra/db/postgres/prisma/schema.prisma"}}')}}]);